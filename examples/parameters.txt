
# dimension of the system 
dimension = 2;
# use dimension = 2 for the function in the text of the challenge
# use dimension = 3 to test on another function defined in Functions.hpp

# initial point from which to start the iterations
initial_condition = '0,0';

# tolerance to control the step length
tol_step = 1e-6;

# tolerance to control the norm of the gradient
tol_residual = 1e-6;

# initial value of alpha
initial_alpha = 0.1;

# value of the additional parameter of the method
# it's the value of mu for exponential decay and inverse decay
# it's the value of sigma for Armijo
param = 0.3;

# maximum number of iterations
max_iterations = 1e5;   

# Algorithm to implement the minimization, use:
# 0 for gradient exponential decay method
# 1 for gradient inverse decay method
# 2 for gradient Armijo method
method = 2;